# Include this file in site configuration "server" blocks.

# For the limit below to work, first define limitconnbyaddr outside
# of the server blocks
limit_conn limitconnbyaddr 60;

location /ali.txt {
  if ($request_method = PUT ) {
    return 400 "Bad request - ignoring";
  }
}

 # block all requests for .bak, .cer, .env, .git, .rar, .svn, many different .zip files
 location ~* \.(bak|cer|env|git|gitignore|pub|rar|sh|svn)$|/(backup_.*|backup|directory|index|latest|public_html|wallet|website|wwwroot)\.zip$ {
   return 400;
 }

# block all requests for .gz files unless it is for /sitemap.xml.gz
location ~ \.gz$ {
    if ($request_uri !~ ^/sitemap\.xml\.gz$) {
        return 400;
    }
}

## Block SQL injections
# query matchers have been moved to a_catchall.conf
#
if ($block_sql_injections = 1) {
    return 400;
}

## Block file injections
set $block_file_injections 0;
if ($query_string ~* "[a-zA-Z0-9_]=http://") {
    set $block_file_injections 1;
}
if ($query_string ~* "[a-zA-Z0-9_]=(\.\.//?)+") {
    set $block_file_injections 1;
}
if ($query_string ~* "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
    set $block_file_injections 1;
}
if ($block_file_injections = 1) {
    return 400;
}

## Block common exploits
set $block_common_exploits 0;
if ($query_string ~* "(<|%3C).*script.*(>|%3E)") {
    set $block_common_exploits 1;
}
if ($query_string ~* "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
    set $block_common_exploits 1;
}
if ($query_string ~* "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
    set $block_common_exploits 1;
}
if ($query_string ~* "proc/self/environ") {
    set $block_common_exploits 1;
}
if ($query_string ~* "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
    set $block_common_exploits 1;
}
if ($query_string ~* "base64_(en|de)code\(.*\)") {
    set $block_common_exploits 1;
}
if ($query_string ~* "\b(phpmyadmin|myadmin|w00t|antisec|win\.ini|tempxtestxtable|jndi:|oast.fun|hichinacdn.net|passwd)\b") {
    set $block_common_exploits 1;
}
if ($block_common_exploits = 1) {
    return 400;
}

## blocking malicious http_referer contents
if ($http_referer ~* "\b(jndi:|oast.fun|eval(|${@eval|hichinacdn.net))\b") {
    return 400;
}

## blocking malicious http_x_forwarded contents
if ($http_x_forwarded_for ~* "\b(jndi:|oast.fun)\b") {
    return 400;
}

## determine if this is a rails site (vs the insights blog)
set $is_rails_site 1;
if ($request_uri ~* "insights") {
    set $is_rails_site 0;
}

## blocking overloaded page parameter that is not a number up to 4 digits
set $bad_page_param 0;
if ($request_uri ~* "[?&]page=\d{0,4}[^\d&]") {
    set $bad_page_param 1$is_rails_site;
}
if ($bad_page_param = 11) {
    return 400;
}

## blocking overloaded locale parameter that is not in the correct locale format xx or xx-XX or en-asia
if ($arg_locale !~* "^([a-z]{2}(-[A-Z]{2})?)?$|^en-asia$") {
    return 403;
}

## Block spam
set $block_spam 0;
if ($query_string ~* "\b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)\b") {
    set $block_spam 1;
}
if ($query_string ~* "\b(erections|hoodia|huronriveracres|impotence|levitra|libido)\b") {
    set $block_spam 1;
}
if ($query_string ~* "\b(ambien|blue\spill|cialis|cocaine|ejaculation|erectile)\b") {
    set $block_spam 1;
}
if ($query_string ~* "\b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)\b") {
    set $block_spam 1;
}
if ($block_spam = 1) {
    return 403;
}

## Block user agents
set $block_user_agents 0;

if ($http_user_agent ~* "\b(aiohttp|anthropic-ai|awariobot|beanserver|bytespider|bot for jce|ccbot|claudebot|crawler_eb|custom-asynchttpclient|download demon|easouspider|ezooms|fuzz faster u fool|getright|getweb|go-ahead-got-it|grabnet|hackney|imagesiftbot|indy library|laminas_http_client|libwww-perl|lua-resty-http|magpie-crawler|python-requests|repolookoutbot|rytebot|scrapy|screaming frog seo spider|sogou web spider|sqlmap|turnitin)\b") {
    set $block_user_agents 1;
}
if ($http_user_agent = 'BaiduSpider') {
    set $block_user_agents 1;
}
if ($block_user_agents = 1) {
    return 403;
}

## Allow only these HTTP request verbs:
if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$) {
  return 405;
}

# $bad_actor_request defined in a_catchall.conf
if ($bad_actor_request) {
  return 400;
}

if ($bad_path) {
  return 400;
}

if ($block_ip) {
  return 444;
}

# $allowed_country defined in /etc/nginx/nginx.conf
if ($allowed_country = no) {
  return 444;
}
