# Old IP: 83.98.128.43, required host header to function

server {
    listen 80;
    server_name duran-audio.com;
    return 301 $scheme://www.duran-audio.com$request_uri;
}

server {
    listen 80;
    server_name www.duran-audio.com;
    include "/etc/nginx/security.conf";
    root /var/www/hmg/hsp_websites/current/public;
    access_log  /var/log/nginx/duran-access.log;
    error_log /var/log/nginx/duran-error.log;
    sendfile on;

    include "/etc/nginx/common.conf";

# Redirects
location ~* \?page\=products { return 301 $scheme://$http_host/en/product_families; }
location ~* \?page\=abf-260 { return 301 $scheme://$http_host/en/products/abf-260; }
location ~* \?page\=amplifiers* { return 301 $scheme://$http_host/en/product_families/duran-audio-amplifiers; }
location ~* \?page\=line-drivers-signal-processing { return 301 $scheme://$http_host/en/product_families/signal-processing; }
location ~* \?page\=wincontrol-server { return 301 $scheme://$http_host/en/products/wincontrol-server; }
location ~* \?page\=surveillance-cerberus { return 301 $scheme://$http_host/en/products/cerberus; }
location ~* \?page\=rs-485* { return 301 $scheme://$http_host/en/products/rs-485-networking; }

location ~* \?page\=software* { return 301 $scheme://$http_host/en/software; }
location ~* \?page\=wincontrol { return 301 $scheme://$http_host/en/softwares/axys-wincontrol-windows; }
location ~* \?page\=opstimizer* { return 301 $scheme://$http_host/en/softwares/opstimizer-windows; }

location ~* \?page\=terms-of-use { return 301 $scheme://$http_host/en/terms_of_use.html; }
location ~* \?page\=privacy* { return 301 $scheme://$http_host/en/privacy_policy.html; }
location ~* \?page\=contact* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=duran-audio-offices* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=feedback* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=about* { return 301 $scheme://$http_host/en/support; }

# These should catch most everything else
location ~* \?page\=* { return 301 $scheme://$http_host/en/; }
location ~* index\.php\?page\=* { return 301 $scheme://$http_host/en/; }

}

# Staging site
server {
    listen 80;
    server_name duran.dbxpro.com;
    include "/etc/nginx/security.conf";
    root /var/www/hmg/hsp_websites/current/public;
    access_log  /var/log/nginx/duran-access.log;
    error_log /var/log/nginx/duran-error.log;
    sendfile on;

    location / {
      auth_basic "Restricted";
      passenger_enabled on;
    }

    location = /favicon.ico {
      alias /var/www/hmg/hsp_websites/current/public/axys.ico;
    }

# Redirects
location ~* \?page\=products { return 301 $scheme://$http_host/en/product_families; }
location ~* \?page\=abf-260 { return 301 $scheme://$http_host/en/products/abf-260; }
location ~* \?page\=amplifiers* { return 301 $scheme://$http_host/en/product_families/duran-audio-amplifiers; }
location ~* \?page\=line-drivers-signal-processing { return 301 $scheme://$http_host/en/product_families/signal-processing; }
location ~* \?page\=wincontrol-server { return 301 $scheme://$http_host/en/products/wincontrol-server; }
location ~* \?page\=surveillance-cerberus { return 301 $scheme://$http_host/en/products/cerberus; }
location ~* \?page\=rs-485* { return 301 $scheme://$http_host/en/products/rs-485-networking; }

location ~* \?page\=software* { return 301 $scheme://$http_host/en/software; }
location ~* \?page\=wincontrol { return 301 $scheme://$http_host/en/softwares/axys-wincontrol-windows; }
location ~* \?page\=opstimizer* { return 301 $scheme://$http_host/en/softwares/opstimizer-windows; }

location ~* \?page\=terms-of-use { return 301 $scheme://$http_host/en/terms_of_use.html; }
location ~* \?page\=privacy* { return 301 $scheme://$http_host/en/privacy_policy.html; }
location ~* \?page\=contact* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=duran-audio-offices* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=feedback* { return 301 $scheme://$http_host/en/support; }
location ~* \?page\=about* { return 301 $scheme://$http_host/en/support; }

# These should catch most everything else
location ~* \?page\=* { return 301 $scheme://$http_host/en/; }
location ~* index\.php\?page\=* { return 301 $scheme://$http_host/en/; }

    passenger_enabled on;
    passenger_friendly_error_pages off;
    proxy_cache hsp;

    location ~ \/rss$ {
      rewrite ^(.*)\/rss$ $1/rss.xml permanent;
    }

    location ~ sitemap {
      passenger_enabled on;
      expires 1d;
      add_header Cache-Control "public";
      proxy_ignore_headers Set-Cookie;
      proxy_hide_header Set-Cookie;
    }
    location ~ ^/(assets)/ {
      root /var/www/hmg/hsp_websites/current/public;
      gzip_static on;
      gzip_http_version 1.0;
      expires      365d;
      add_header Cache-Control public;
      add_header   Last-Modified "";
      add_header ETag "";
      break;
    }
    location ~ ^/system\/wares/ {
      internal;
      root /var/www/hmg/hsp_websites/shared;
      gzip_static on;
      gzip_http_version 1.0;
      expires      365d;
      add_header Cache-Control public;
      add_header   Last-Modified "";
      add_header ETag "";
      break;
    }
    location ~ ^/protected_softwares/ {
      internal;
      root /var/www/hmg/hsp_websites/protected;
      gzip_static on;
      gzip_http_version 1.0;
      expires      365d;
      add_header Cache-Control public;
      add_header   Last-Modified "";
      add_header ETag "";
      break;
    }
    location ~ ^/(system)/ {
      root /var/www/hmg/hsp_websites/shared;
      gzip_static on;
      gzip_http_version 1.0;
      expires      30d;
      add_header Cache-Control public;
      add_header   Last-Modified "";
      add_header ETag "";
      break;
    }
    location ~ ^/(swfs)/ {
      root /var/www/hmg/hsp_websites/current/public;
      gzip_static on;
      gzip_http_version 1.0;
      expires      365d;
      add_header Cache-Control public;
      add_header   Last-Modified "";
      add_header ETag "";
      break;
    }

    # Get rid of lame iframe params
    if ($args ~ (.*)width=[^&]*(.*)) {
      set $args $1$2;
    }
    if ($args ~ (.*)height=[^&]*(.*)) {
      set $args $1$2;
    }
    if ($args ~ (.*)iframe=[^&]*(.*)) {
      set $args $1$2;
    }

    error_page 503 @maintenance;
    location @maintenance {
       rewrite ^(.*)$ /503.html break;
    }
}
