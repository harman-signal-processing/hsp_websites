# The new JBL Pro site
server {
  listen 80;
  server_name jblpro.hprosandbox.com www.jblpro.com jblpro.com;
  include "/etc/nginx/security.conf";
  root /var/www/brandsites/current/public;
  access_log  /var/log/nginx/jblpro-access.log;
  error_log /var/log/nginx/jblpro-error.log;

  add_header X-Frame-Options "SAMEORIGIN";
  passenger_enabled on;
  passenger_friendly_error_pages off;
  proxy_cache hsp;
  sendfile on;

  location / {
    if (-f /var/www/brandsites/shared/config/maintenance.txt) {
        return 503;
    }

    auth_basic "Restricted";
    auth_basic_user_file /var/www/hmg/htpasswd;

    # When the request goes through the Rackspace load balancer, it adds the
    # http_x_forwarded_proto header. Since we're trying to only answer on https
    # for most requests, this will redirect the request to https if Rackspace
    # tells us the request came through with http.
    #
    # This worked well until Jan 30, 2018. Then I had to start doing SSL termination
    # in NGINX instead of at the Rackspace load balancer.
    #
    #if ($http_x_forwarded_proto = "http") {
    #  return 301 https://$server_name$request_uri;
    #}
    #
    #expires 15m;
    #add_header Cache-Control "public";
    if ($request_uri ~* ".(jpg|jpeg|gif|gz|flv|wmv|avi|css|swf|png|ico|mpeg|mpg|mp3|mp4|js)(\?v=[0-9.]+)?$") {
      expires 7d;
      access_log off;
      break;
    }
    passenger_enabled on;
    passenger_friendly_error_pages off;
  }

  location ~ \/rss$ {
    rewrite ^(.*)\/rss$ $1/rss.xml permanent;
  }

  location ~ sitemap {
    passenger_enabled on;
    expires 1d;
    add_header Cache-Control "public";
    proxy_ignore_headers Set-Cookie;
    proxy_hide_header Set-Cookie;
  }

  location ~ ^/(system)/ {
    root /var/www/brandsites/shared;
    gzip_static on;
    gzip_http_version 1.0;
    expires      30d;
    add_header Cache-Control public;
    add_header   Last-Modified "";
    add_header ETag "";
    break;
  }
  location ~ ^/(swfs)/ {
    root /var/www/brandsites/current/public;
    gzip_static on;
    gzip_http_version 1.0;
    expires      365d;
    add_header Cache-Control public;
    add_header   Last-Modified "";
    add_header ETag "";
    break;
  }

  # cn redirect to zh
  location /cn {
    rewrite ^ /zh permanent;
  }

  # Get rid of lame iframe params
  if ($args ~ (.*)width=[^&]*(.*)) {
    set $args $1$2;
  }
  if ($args ~ (.*)height=[^&]*(.*)) {
    set $args $1$2;
  }
  if ($args ~ (.*)iframe=[^&]*(.*)) {
    set $args $1$2;
  }

  error_page 503 @maintenance;
  location @maintenance {
     rewrite ^(.*)$ /503.html break;
  }

}
